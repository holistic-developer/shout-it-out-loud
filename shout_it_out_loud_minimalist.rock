counter is 97                    (set counter to 97)
Until counter is higher than 122 (loop until counter > 122)
cast counter into key            (key = counter cast to character)
let upper be counter without 32  (upper = counter - 32)
cast upper into value            (value = upper cast to character)
let mapping at key be value      (mapping[key] = value)
build counter up                 (counter ++)
                                 (close until loop)
listen to input                  (read stdin into input)
split input into chars           (split string into character array)
rock result                      (initialize empty array: result)
while chars ain't nothing        (while array size > 0)
roll chars into char             (pop top element)
let upper be mapping at char     (upper = value of mapping of key: char)
if upper is nothing              (if no value was found; upper = null)
let upper be char                (upper = char)
                                 (end if)
rock upper into result           (push upper into result list)
                                 (close while loop)
join result                      (convert char array to string)
say result                       (print result to stdout)